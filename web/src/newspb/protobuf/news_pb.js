/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

goog.exportSymbol("proto.protobuf.New", null, global);
goog.exportSymbol("proto.protobuf.Request", null, global);
goog.exportSymbol("proto.protobuf.Response", null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Request = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protobuf.Request.displayName = "proto.protobuf.Request";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.Request.prototype.toObject = function (opt_includeInstance) {
    return proto.protobuf.Request.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.Request} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.Request.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        type: jspb.Message.getFieldWithDefault(msg, 1, ""),
        page: jspb.Message.getFieldWithDefault(msg, 2, 0),
        size: jspb.Message.getFieldWithDefault(msg, 3, 0),
        isFilter: jspb.Message.getFieldWithDefault(msg, 4, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Request}
 */
proto.protobuf.Request.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Request();
  return proto.protobuf.Request.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Request}
 */
proto.protobuf.Request.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setPage(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setSize(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setIsFilter(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Request.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Request.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt64(2, f);
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(3, f);
  }
  f = message.getIsFilter();
  if (f !== 0) {
    writer.writeInt64(4, f);
  }
};

/**
 * optional string type = 1;
 * @return {string}
 */
proto.protobuf.Request.prototype.getType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/** @param {string} value */
proto.protobuf.Request.prototype.setType = function (value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional int64 page = 2;
 * @return {number}
 */
proto.protobuf.Request.prototype.getPage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/** @param {number} value */
proto.protobuf.Request.prototype.setPage = function (value) {
  jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int64 size = 3;
 * @return {number}
 */
proto.protobuf.Request.prototype.getSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/** @param {number} value */
proto.protobuf.Request.prototype.setSize = function (value) {
  jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional int64 is_filter = 4;
 * @return {number}
 */
proto.protobuf.Request.prototype.getIsFilter = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/** @param {number} value */
proto.protobuf.Request.prototype.setIsFilter = function (value) {
  jspb.Message.setProto3IntField(this, 4, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Response = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.protobuf.Response.repeatedFields_,
    null
  );
};
goog.inherits(proto.protobuf.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protobuf.Response.displayName = "proto.protobuf.Response";
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.Response.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.Response.prototype.toObject = function (opt_includeInstance) {
    return proto.protobuf.Response.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.Response} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.Response.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        newsList: jspb.Message.toObjectList(
          msg.getNewsList(),
          proto.protobuf.New.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Response}
 */
proto.protobuf.Response.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Response();
  return proto.protobuf.Response.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Response}
 */
proto.protobuf.Response.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.protobuf.New();
        reader.readMessage(
          value,
          proto.protobuf.New.deserializeBinaryFromReader
        );
        msg.addNews(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Response.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Response.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getNewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.New.serializeBinaryToWriter
    );
  }
};

/**
 * repeated New news = 1;
 * @return {!Array<!proto.protobuf.New>}
 */
proto.protobuf.Response.prototype.getNewsList = function () {
  return /** @type{!Array<!proto.protobuf.New>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.New, 1)
  );
};

/** @param {!Array<!proto.protobuf.New>} value */
proto.protobuf.Response.prototype.setNewsList = function (value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.protobuf.New=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.New}
 */
proto.protobuf.Response.prototype.addNews = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.protobuf.New,
    opt_index
  );
};

proto.protobuf.Response.prototype.clearNewsList = function () {
  this.setNewsList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.New = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.New, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protobuf.New.displayName = "proto.protobuf.New";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.New.prototype.toObject = function (opt_includeInstance) {
    return proto.protobuf.New.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.New} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.New.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        uniquekey: jspb.Message.getFieldWithDefault(msg, 1, ""),
        title: jspb.Message.getFieldWithDefault(msg, 2, ""),
        date: jspb.Message.getFieldWithDefault(msg, 3, ""),
        category: jspb.Message.getFieldWithDefault(msg, 4, ""),
        authorName: jspb.Message.getFieldWithDefault(msg, 5, ""),
        url: jspb.Message.getFieldWithDefault(msg, 6, ""),
        thumbnailPicS: jspb.Message.getFieldWithDefault(msg, 7, ""),
        isContent: jspb.Message.getFieldWithDefault(msg, 8, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.New}
 */
proto.protobuf.New.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.New();
  return proto.protobuf.New.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.New} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.New}
 */
proto.protobuf.New.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUniquekey(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDate(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setCategory(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setAuthorName(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setThumbnailPicS(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setIsContent(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.New.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.New.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.New} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.New.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUniquekey();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getAuthorName();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getThumbnailPicS();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getIsContent();
  if (f !== 0) {
    writer.writeInt64(8, f);
  }
};

/**
 * optional string uniquekey = 1;
 * @return {string}
 */
proto.protobuf.New.prototype.getUniquekey = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/** @param {string} value */
proto.protobuf.New.prototype.setUniquekey = function (value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string title = 2;
 * @return {string}
 */
proto.protobuf.New.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/** @param {string} value */
proto.protobuf.New.prototype.setTitle = function (value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string date = 3;
 * @return {string}
 */
proto.protobuf.New.prototype.getDate = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/** @param {string} value */
proto.protobuf.New.prototype.setDate = function (value) {
  jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string category = 4;
 * @return {string}
 */
proto.protobuf.New.prototype.getCategory = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/** @param {string} value */
proto.protobuf.New.prototype.setCategory = function (value) {
  jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string author_name = 5;
 * @return {string}
 */
proto.protobuf.New.prototype.getAuthorName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/** @param {string} value */
proto.protobuf.New.prototype.setAuthorName = function (value) {
  jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string url = 6;
 * @return {string}
 */
proto.protobuf.New.prototype.getUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};

/** @param {string} value */
proto.protobuf.New.prototype.setUrl = function (value) {
  jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string thumbnail_pic_s = 7;
 * @return {string}
 */
proto.protobuf.New.prototype.getThumbnailPicS = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};

/** @param {string} value */
proto.protobuf.New.prototype.setThumbnailPicS = function (value) {
  jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional int64 is_content = 8;
 * @return {number}
 */
proto.protobuf.New.prototype.getIsContent = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/** @param {number} value */
proto.protobuf.New.prototype.setIsContent = function (value) {
  jspb.Message.setProto3IntField(this, 8, value);
};

goog.object.extend(exports, proto.protobuf);
